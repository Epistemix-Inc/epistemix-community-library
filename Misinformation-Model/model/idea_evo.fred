variables {
    shared numeric n_idea_seeds
    n_idea_seeds = 10
    shared list idea_seed_agents
    agent numeric seed_agent

    agent numeric my_x
    agent numeric my_y

    agent list my_friends
    agent list my_uninitiated_friends
    agent numeric my_idea_recipient
    agent numeric my_idea_origin
}

agent_startup {
    my_x = -99
    my_y = -99
}

condition IDEA_EVOLUTION {
    start_state = Start
    meta_start_state = Wait_For_Network

    state Start {
        wait()
        default()
    }

    state Wait_For_Network {
        wait(3*24)
        default(Select_Idea_Origin)
    }
    state Select_Idea_Origin {
        idea_seed_agents = sample_without_replacement(get_population(),n_idea_seeds)
        tell(idea_seed_agents, my_idea_origin, 0)
        tell(idea_seed_agents, my_x, 0)
        tell(idea_seed_agents, my_y, 0)
        send(idea_seed_agents, IDEA_EVOLUTION, Wait_To_Share)
        wait(0)
        default(Excluded)
    }

    state Share_Idea {
        my_friends = outlinks(Physical, id())
        my_uninitiated_friends = filter_agents(my_friends, ask(_,my_x)==-99)
        if (length(my_uninitiated_friends) > 0) then {
            my_idea_recipient = last(sample_without_replacement(my_uninitiated_friends,1))

            tell(my_idea_recipient, my_x, my_x+uniform(-0.1,0.1))
            tell(my_idea_recipient, my_y, my_y+uniform(-0.1,0.1))

            tell(my_idea_recipient, my_idea_origin, id())
            send(my_idea_recipient, IDEA_EVOLUTION, Wait_To_Share)

        }

        wait(0)
        default(Excluded)
    }

    state Wait_To_Share {
        print_csv(idea_evolution.csv, id(), sim_day(), my_x, my_y, my_idea_origin)
        wait(24)
        default(Share_Idea)
    }
}
