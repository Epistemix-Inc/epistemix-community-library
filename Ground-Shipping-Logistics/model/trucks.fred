comment {
	A model for reading in and moving trucks around a city network.

	Authors
	-------
	Erin Zwick : erin.zwick@epistemix.com
	Andrew Lane : andrew.lane@epistemix.com
}

variables {
	# truck agent variables
	agent numeric days_on_road
	agent numeric home_city # extension: truckers must return home after X number of days on road --> labor restrictions
	agent numeric where_am_i_currently
	agent numeric next_city
	agent numeric departure_city
	agent numeric distance_remaining
	agent numeric destination_index

	# global variables
	shared numeric max_daily_distance
}

startup {
	max_daily_distance = 500
	open_csv(travel_log.csv, "ID","DAY","HOME_CITY","LAST_CITY","NEXT_CITY","DISTANCE_REMAINING")
}

condition GENERATE_TRUCKS {
	comment doc {
		A condition that reads in data and generates truck agents.

		Subjected
		--------
		agent : False
		admin : False
		meta : True

		Variables
		---------
		None

		Dependencies
		------------
		`city_locations.fred` : GENERATE_LOCATIONS
	}

	meta_start_state = MetaStart

	state MetaStart {
		wait(0)
		next(InitTrucks)
	}

	state InitTrucks {
		read_agent_file($FRED_PROJECT/data/trucks.txt)
		wait()
		next()
	}
}

condition MOVE_TRUCKS {
	comment doc {
		A condition that moves truck agents around city network.

		Subjected
		--------
		agent : True
		admin : False
		meta : False

		Variables
		---------
		days_on_road : agent numeric
			days spent on the road this trip
		departure_city : agent numeric
			city that an agent is coming from
		destination_index : agent numeric
			list index associated with destination city
		distance_remaining : agent numeric
			remaining distance in miles from departure to destination
		home_city : agent numeric
			truck's city of origin
		max_daily_distance : shared numeric
			maximum allowed distance trucks can travel in one day
		next_city : agent numeric
			destination city
		temp_city_list : condition shared numeric
			temporary list of cities in adjacency matrix list for truck
			agent to sample from
		temp_distance_list : condition shared numeric
			temporary list of distances associated with cities truck
			agent samples from
		where_am_i_currently : agent numeric
			city a truck is in when evaluating where to go next

		Dependencies
		------------
		`travel_disruption.fred`: MONITOR_DISRUPTIONS, CAUSE_DISRUPTIONS
	}

	start_state = Start

		variables {
			shared list temp_city_list
			shared list temp_distance_list
		}

	state Start {
		wait(0)
		next(FindHome)
	}

	state FindHome {
		where_am_i_currently = home_city
		wait(0)
		next(ChooseLocation)
	}

	state ChooseLocation {
		departure_city = where_am_i_currently
		temp_city_list = adjacency_matrix[where_am_i_currently]
		temp_distance_list = distance_matrix[where_am_i_currently]
		next_city = last(sample_without_replacement(temp_city_list,1,temp_distance_list))
		destination_index = find_index(next_city,temp_city_list)
		distance_remaining = temp_distance_list[destination_index]
		wait(0)
		next(OnTheRoad)
	}

	state OnTheRoad {
		distance_remaining = max(distance_remaining - max_daily_distance,0)
		wait(24)
		next(DidIArrive)
	}

	state DidIArrive {
		wait(0)
        print_csv(travel_log.csv,id,today,home_city,where_am_i_currently,next_city,distance_remaining)
		if(distance_remaining > 0) then next(OnTheRoad)
		default(CheckCapacity)
	}

	state CheckCapacity {
		wait(0)
		if(truck_capacity[next_city] > 0) then next(Arrive)
		default(CheckAgainTomorrow)
	}

	state CheckAgainTomorrow {
		wait(24)
		if(truck_capacity[next_city] > 0) then next(Arrive)
		default(CheckAgainTomorrow)
	}

	state Arrive {
		where_am_i_currently = next_city
		truck_capacity[next_city] = max(0, truck_capacity[next_city] - 1)
		wait(24)
		next(ChooseLocation)
	}

}