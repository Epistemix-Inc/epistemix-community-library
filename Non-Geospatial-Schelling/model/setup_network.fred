variables {
    shared numeric link # iterator variable
    shared list links
}
    
network Friendship {
   is_directed = 0
   has_group_agent = 0
   output_interval = 1 # output recorded every day
}

agent_startup {
    if (my_color == -1) then exit()
    join(Friendship)
}

condition SETUP_NETWORK {

    start_state = Pruning_Edges
    meta_start_state = Generating_Edges
    
    state Generating_Edges {
        randomize_network(Friendship, 8)
        wait(0)
        default(Excluded)
    }
    
    state Pruning_Edges {
    
        links = outlinks(Friendship, id())
       
            for (link, links) do {
                if (bernoulli(edge_drop_prob)) then {
                    delete_edge(Friendship, id(), link)
                    my_open_spots = my_open_spots + 1
                    tell(link, my_open_spots, ask(_, my_open_spots) + 1)
                }
            }
        
        
        
        wait(0)
        default(Excluded)
    }
}